
services:
  angular-app:
    build:
      context: ./angular
      dockerfile: Dockerfile.angular
    ports:
      - "4200:4200"
    depends_on:
      - python-app
      - geoserver

  python-app:
    build:
      context: ./geoserver_python
      dockerfile: Dockerfile.python
    volumes:
      - .:/app
    ports:
      - 5000:5000
    depends_on:
#      - geoserver
       - db
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Maxval@123
    deploy:
      resources:
        limits:
          cpus: '6'
          memory: 32G
#    command: daphne -b 0.0.0.0 -p 5000 geoserver_python.asgi:application
    command: ./manage.py runserver 0.0.0.0:5000

  geoserver:
    build:
      context: ./geoserver
      dockerfile: Dockerfile.geoserver
    ports:
      - "8081:8080"
    volumes:
      - geoserver_data:/var/lib/geoserver/data
    depends_on:
      - db

  db:
    image: postgis/postgis:13-3.1
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Maxval@123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data


  redis:
    image: redis:alpine
    ports:
      - 6379:6379

  celery:
    container_name: python_app
    image: celery_app

    command: celery -A poc worker -l info --uid=nobody --gid=nogroup -Q poc_tasks
    volumes:
      - .:/app
    depends_on:
      - redis

  celerybeat:
    container_name: beat
    image: celery_app
    command: [ "celery", "-A", "geoserver_python", "beat", "--loglevel=info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler" ]
    volumes:
      - .:/app
    depends_on:
      - redis

volumes:
  postgres_data:
  geoserver_data: